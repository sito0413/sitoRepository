package frameWork.base;

import static org.junit.Assert.*;

import org.junit.Test;

public class UtilityCharacterTest {
	@Test
	public void toHankakuTest() {
		assertTrue("0".equals(UtilityCharacter.toHankaku("０")));
		assertTrue("1".equals(UtilityCharacter.toHankaku("１")));
		assertTrue("2".equals(UtilityCharacter.toHankaku("２")));
		assertTrue("3".equals(UtilityCharacter.toHankaku("３")));
		assertTrue("4".equals(UtilityCharacter.toHankaku("４")));
		assertTrue("5".equals(UtilityCharacter.toHankaku("５")));
		assertTrue("6".equals(UtilityCharacter.toHankaku("６")));
		assertTrue("7".equals(UtilityCharacter.toHankaku("７")));
		assertTrue("8".equals(UtilityCharacter.toHankaku("８")));
		assertTrue("9".equals(UtilityCharacter.toHankaku("９")));
		assertTrue("a".equals(UtilityCharacter.toHankaku("ａ")));
		assertTrue("b".equals(UtilityCharacter.toHankaku("ｂ")));
		assertTrue("c".equals(UtilityCharacter.toHankaku("ｃ")));
		assertTrue("d".equals(UtilityCharacter.toHankaku("ｄ")));
		assertTrue("e".equals(UtilityCharacter.toHankaku("ｅ")));
		assertTrue("f".equals(UtilityCharacter.toHankaku("ｆ")));
		assertTrue("g".equals(UtilityCharacter.toHankaku("ｇ")));
		assertTrue("h".equals(UtilityCharacter.toHankaku("ｈ")));
		assertTrue("i".equals(UtilityCharacter.toHankaku("ｉ")));
		assertTrue("j".equals(UtilityCharacter.toHankaku("ｊ")));
		assertTrue("k".equals(UtilityCharacter.toHankaku("ｋ")));
		assertTrue("l".equals(UtilityCharacter.toHankaku("ｌ")));
		assertTrue("m".equals(UtilityCharacter.toHankaku("ｍ")));
		assertTrue("n".equals(UtilityCharacter.toHankaku("ｎ")));
		assertTrue("o".equals(UtilityCharacter.toHankaku("ｏ")));
		assertTrue("p".equals(UtilityCharacter.toHankaku("ｐ")));
		assertTrue("q".equals(UtilityCharacter.toHankaku("ｑ")));
		assertTrue("r".equals(UtilityCharacter.toHankaku("ｒ")));
		assertTrue("s".equals(UtilityCharacter.toHankaku("ｓ")));
		assertTrue("t".equals(UtilityCharacter.toHankaku("ｔ")));
		assertTrue("u".equals(UtilityCharacter.toHankaku("ｕ")));
		assertTrue("v".equals(UtilityCharacter.toHankaku("ｖ")));
		assertTrue("w".equals(UtilityCharacter.toHankaku("ｗ")));
		assertTrue("x".equals(UtilityCharacter.toHankaku("ｘ")));
		assertTrue("y".equals(UtilityCharacter.toHankaku("ｙ")));
		assertTrue("z".equals(UtilityCharacter.toHankaku("ｚ")));
		assertTrue("A".equals(UtilityCharacter.toHankaku("Ａ")));
		assertTrue("B".equals(UtilityCharacter.toHankaku("Ｂ")));
		assertTrue("C".equals(UtilityCharacter.toHankaku("Ｃ")));
		assertTrue("D".equals(UtilityCharacter.toHankaku("Ｄ")));
		assertTrue("E".equals(UtilityCharacter.toHankaku("Ｅ")));
		assertTrue("F".equals(UtilityCharacter.toHankaku("Ｆ")));
		assertTrue("G".equals(UtilityCharacter.toHankaku("Ｇ")));
		assertTrue("H".equals(UtilityCharacter.toHankaku("Ｈ")));
		assertTrue("I".equals(UtilityCharacter.toHankaku("Ｉ")));
		assertTrue("J".equals(UtilityCharacter.toHankaku("Ｊ")));
		assertTrue("K".equals(UtilityCharacter.toHankaku("Ｋ")));
		assertTrue("L".equals(UtilityCharacter.toHankaku("Ｌ")));
		assertTrue("M".equals(UtilityCharacter.toHankaku("Ｍ")));
		assertTrue("N".equals(UtilityCharacter.toHankaku("Ｎ")));
		assertTrue("O".equals(UtilityCharacter.toHankaku("Ｏ")));
		assertTrue("P".equals(UtilityCharacter.toHankaku("Ｐ")));
		assertTrue("Q".equals(UtilityCharacter.toHankaku("Ｑ")));
		assertTrue("R".equals(UtilityCharacter.toHankaku("Ｒ")));
		assertTrue("S".equals(UtilityCharacter.toHankaku("Ｓ")));
		assertTrue("T".equals(UtilityCharacter.toHankaku("Ｔ")));
		assertTrue("U".equals(UtilityCharacter.toHankaku("Ｕ")));
		assertTrue("V".equals(UtilityCharacter.toHankaku("Ｖ")));
		assertTrue("W".equals(UtilityCharacter.toHankaku("Ｗ")));
		assertTrue("X".equals(UtilityCharacter.toHankaku("Ｘ")));
		assertTrue("Y".equals(UtilityCharacter.toHankaku("Ｙ")));
		assertTrue("Z".equals(UtilityCharacter.toHankaku("Ｚ")));
		assertTrue("ｱ".equals(UtilityCharacter.toHankaku("ア")));
		assertTrue("ｲ".equals(UtilityCharacter.toHankaku("イ")));
		assertTrue("ｳ".equals(UtilityCharacter.toHankaku("ウ")));
		assertTrue("ｴ".equals(UtilityCharacter.toHankaku("エ")));
		assertTrue("ｵ".equals(UtilityCharacter.toHankaku("オ")));
		assertTrue("ｶ".equals(UtilityCharacter.toHankaku("カ")));
		assertTrue("ｷ".equals(UtilityCharacter.toHankaku("キ")));
		assertTrue("ｸ".equals(UtilityCharacter.toHankaku("ク")));
		assertTrue("ｹ".equals(UtilityCharacter.toHankaku("ケ")));
		assertTrue("ｺ".equals(UtilityCharacter.toHankaku("コ")));
		assertTrue("ｻ".equals(UtilityCharacter.toHankaku("サ")));
		assertTrue("ｼ".equals(UtilityCharacter.toHankaku("シ")));
		assertTrue("ｽ".equals(UtilityCharacter.toHankaku("ス")));
		assertTrue("ｾ".equals(UtilityCharacter.toHankaku("セ")));
		assertTrue("ｿ".equals(UtilityCharacter.toHankaku("ソ")));
		assertTrue("ﾀ".equals(UtilityCharacter.toHankaku("タ")));
		assertTrue("ﾁ".equals(UtilityCharacter.toHankaku("チ")));
		assertTrue("ﾂ".equals(UtilityCharacter.toHankaku("ツ")));
		assertTrue("ﾃ".equals(UtilityCharacter.toHankaku("テ")));
		assertTrue("ﾄ".equals(UtilityCharacter.toHankaku("ト")));
		assertTrue("ﾅ".equals(UtilityCharacter.toHankaku("ナ")));
		assertTrue("ﾆ".equals(UtilityCharacter.toHankaku("ニ")));
		assertTrue("ﾇ".equals(UtilityCharacter.toHankaku("ヌ")));
		assertTrue("ﾈ".equals(UtilityCharacter.toHankaku("ネ")));
		assertTrue("ﾉ".equals(UtilityCharacter.toHankaku("ノ")));
		assertTrue("ﾊ".equals(UtilityCharacter.toHankaku("ハ")));
		assertTrue("ﾋ".equals(UtilityCharacter.toHankaku("ヒ")));
		assertTrue("ﾌ".equals(UtilityCharacter.toHankaku("フ")));
		assertTrue("ﾍ".equals(UtilityCharacter.toHankaku("ヘ")));
		assertTrue("ﾎ".equals(UtilityCharacter.toHankaku("ホ")));
		assertTrue("ﾏ".equals(UtilityCharacter.toHankaku("マ")));
		assertTrue("ﾐ".equals(UtilityCharacter.toHankaku("ミ")));
		assertTrue("ﾑ".equals(UtilityCharacter.toHankaku("ム")));
		assertTrue("ﾒ".equals(UtilityCharacter.toHankaku("メ")));
		assertTrue("ﾓ".equals(UtilityCharacter.toHankaku("モ")));
		assertTrue("ﾔ".equals(UtilityCharacter.toHankaku("ヤ")));
		assertTrue("ﾕ".equals(UtilityCharacter.toHankaku("ユ")));
		assertTrue("ﾖ".equals(UtilityCharacter.toHankaku("ヨ")));
		assertTrue("ﾗ".equals(UtilityCharacter.toHankaku("ラ")));
		assertTrue("ﾘ".equals(UtilityCharacter.toHankaku("リ")));
		assertTrue("ﾙ".equals(UtilityCharacter.toHankaku("ル")));
		assertTrue("ﾚ".equals(UtilityCharacter.toHankaku("レ")));
		assertTrue("ﾛ".equals(UtilityCharacter.toHankaku("ロ")));
		assertTrue("ﾜ".equals(UtilityCharacter.toHankaku("ワ")));
		assertTrue("ｦ".equals(UtilityCharacter.toHankaku("ヲ")));
		assertTrue("ﾝ".equals(UtilityCharacter.toHankaku("ン")));
		assertTrue("ｧ".equals(UtilityCharacter.toHankaku("ァ")));
		assertTrue("ｨ".equals(UtilityCharacter.toHankaku("ィ")));
		assertTrue("ｩ".equals(UtilityCharacter.toHankaku("ゥ")));
		assertTrue("ｪ".equals(UtilityCharacter.toHankaku("ェ")));
		assertTrue("ｫ".equals(UtilityCharacter.toHankaku("ォ")));
		assertTrue("ｯ".equals(UtilityCharacter.toHankaku("ッ")));
		assertTrue("ｬ".equals(UtilityCharacter.toHankaku("ャ")));
		assertTrue("ｭ".equals(UtilityCharacter.toHankaku("ュ")));
		assertTrue("ｮ".equals(UtilityCharacter.toHankaku("ョ")));
		assertTrue("ｰ".equals(UtilityCharacter.toHankaku("ー")));
		assertTrue("｡".equals(UtilityCharacter.toHankaku("。")));
		assertTrue("､".equals(UtilityCharacter.toHankaku("、")));
		assertTrue("･".equals(UtilityCharacter.toHankaku("・")));
		assertTrue("｢".equals(UtilityCharacter.toHankaku("「")));
		assertTrue("｣".equals(UtilityCharacter.toHankaku("」")));
		assertTrue("ﾞ".equals(UtilityCharacter.toHankaku("゛")));
		assertTrue("ﾟ".equals(UtilityCharacter.toHankaku("゜")));
		assertTrue("ｳﾞ".equals(UtilityCharacter.toHankaku("ヴ")));
		assertTrue("ｶﾞ".equals(UtilityCharacter.toHankaku("ガ")));
		assertTrue("ｷﾞ".equals(UtilityCharacter.toHankaku("ギ")));
		assertTrue("ｸﾞ".equals(UtilityCharacter.toHankaku("グ")));
		assertTrue("ｹﾞ".equals(UtilityCharacter.toHankaku("ゲ")));
		assertTrue("ｺﾞ".equals(UtilityCharacter.toHankaku("ゴ")));
		assertTrue("ｻﾞ".equals(UtilityCharacter.toHankaku("ザ")));
		assertTrue("ｼﾞ".equals(UtilityCharacter.toHankaku("ジ")));
		assertTrue("ｽﾞ".equals(UtilityCharacter.toHankaku("ズ")));
		assertTrue("ｾﾞ".equals(UtilityCharacter.toHankaku("ゼ")));
		assertTrue("ｿﾞ".equals(UtilityCharacter.toHankaku("ゾ")));
		assertTrue("ﾀﾞ".equals(UtilityCharacter.toHankaku("ダ")));
		assertTrue("ﾁﾞ".equals(UtilityCharacter.toHankaku("ヂ")));
		assertTrue("ﾂﾞ".equals(UtilityCharacter.toHankaku("ヅ")));
		assertTrue("ﾃﾞ".equals(UtilityCharacter.toHankaku("デ")));
		assertTrue("ﾄﾞ".equals(UtilityCharacter.toHankaku("ド")));
		assertTrue("ﾊﾞ".equals(UtilityCharacter.toHankaku("バ")));
		assertTrue("ﾋﾞ".equals(UtilityCharacter.toHankaku("ビ")));
		assertTrue("ﾌﾞ".equals(UtilityCharacter.toHankaku("ブ")));
		assertTrue("ﾍﾞ".equals(UtilityCharacter.toHankaku("ベ")));
		assertTrue("ﾎﾞ".equals(UtilityCharacter.toHankaku("ボ")));
		assertTrue("ﾊﾟ".equals(UtilityCharacter.toHankaku("パ")));
		assertTrue("ﾋﾟ".equals(UtilityCharacter.toHankaku("ピ")));
		assertTrue("ﾌﾟ".equals(UtilityCharacter.toHankaku("プ")));
		assertTrue("ﾍﾟ".equals(UtilityCharacter.toHankaku("ペ")));
		assertTrue("ﾎﾟ".equals(UtilityCharacter.toHankaku("ポ")));
		assertTrue("0".equals(UtilityCharacter.toHankaku("0")));

	}

	@Test
	public void toZenkakuTest() {
		assertTrue(UtilityCharacter.toZenkaku("0").equals("０"));
		assertTrue(UtilityCharacter.toZenkaku("1").equals("１"));
		assertTrue(UtilityCharacter.toZenkaku("2").equals("２"));
		assertTrue(UtilityCharacter.toZenkaku("3").equals("３"));
		assertTrue(UtilityCharacter.toZenkaku("4").equals("４"));
		assertTrue(UtilityCharacter.toZenkaku("5").equals("５"));
		assertTrue(UtilityCharacter.toZenkaku("6").equals("６"));
		assertTrue(UtilityCharacter.toZenkaku("7").equals("７"));
		assertTrue(UtilityCharacter.toZenkaku("8").equals("８"));
		assertTrue(UtilityCharacter.toZenkaku("9").equals("９"));
		assertTrue(UtilityCharacter.toZenkaku("a").equals("ａ"));
		assertTrue(UtilityCharacter.toZenkaku("b").equals("ｂ"));
		assertTrue(UtilityCharacter.toZenkaku("c").equals("ｃ"));
		assertTrue(UtilityCharacter.toZenkaku("d").equals("ｄ"));
		assertTrue(UtilityCharacter.toZenkaku("e").equals("ｅ"));
		assertTrue(UtilityCharacter.toZenkaku("f").equals("ｆ"));
		assertTrue(UtilityCharacter.toZenkaku("g").equals("ｇ"));
		assertTrue(UtilityCharacter.toZenkaku("h").equals("ｈ"));
		assertTrue(UtilityCharacter.toZenkaku("i").equals("ｉ"));
		assertTrue(UtilityCharacter.toZenkaku("j").equals("ｊ"));
		assertTrue(UtilityCharacter.toZenkaku("k").equals("ｋ"));
		assertTrue(UtilityCharacter.toZenkaku("l").equals("ｌ"));
		assertTrue(UtilityCharacter.toZenkaku("m").equals("ｍ"));
		assertTrue(UtilityCharacter.toZenkaku("n").equals("ｎ"));
		assertTrue(UtilityCharacter.toZenkaku("o").equals("ｏ"));
		assertTrue(UtilityCharacter.toZenkaku("p").equals("ｐ"));
		assertTrue(UtilityCharacter.toZenkaku("q").equals("ｑ"));
		assertTrue(UtilityCharacter.toZenkaku("r").equals("ｒ"));
		assertTrue(UtilityCharacter.toZenkaku("s").equals("ｓ"));
		assertTrue(UtilityCharacter.toZenkaku("t").equals("ｔ"));
		assertTrue(UtilityCharacter.toZenkaku("u").equals("ｕ"));
		assertTrue(UtilityCharacter.toZenkaku("v").equals("ｖ"));
		assertTrue(UtilityCharacter.toZenkaku("w").equals("ｗ"));
		assertTrue(UtilityCharacter.toZenkaku("x").equals("ｘ"));
		assertTrue(UtilityCharacter.toZenkaku("y").equals("ｙ"));
		assertTrue(UtilityCharacter.toZenkaku("z").equals("ｚ"));
		assertTrue(UtilityCharacter.toZenkaku("A").equals("Ａ"));
		assertTrue(UtilityCharacter.toZenkaku("B").equals("Ｂ"));
		assertTrue(UtilityCharacter.toZenkaku("C").equals("Ｃ"));
		assertTrue(UtilityCharacter.toZenkaku("D").equals("Ｄ"));
		assertTrue(UtilityCharacter.toZenkaku("E").equals("Ｅ"));
		assertTrue(UtilityCharacter.toZenkaku("F").equals("Ｆ"));
		assertTrue(UtilityCharacter.toZenkaku("G").equals("Ｇ"));
		assertTrue(UtilityCharacter.toZenkaku("H").equals("Ｈ"));
		assertTrue(UtilityCharacter.toZenkaku("I").equals("Ｉ"));
		assertTrue(UtilityCharacter.toZenkaku("J").equals("Ｊ"));
		assertTrue(UtilityCharacter.toZenkaku("K").equals("Ｋ"));
		assertTrue(UtilityCharacter.toZenkaku("L").equals("Ｌ"));
		assertTrue(UtilityCharacter.toZenkaku("M").equals("Ｍ"));
		assertTrue(UtilityCharacter.toZenkaku("N").equals("Ｎ"));
		assertTrue(UtilityCharacter.toZenkaku("O").equals("Ｏ"));
		assertTrue(UtilityCharacter.toZenkaku("P").equals("Ｐ"));
		assertTrue(UtilityCharacter.toZenkaku("Q").equals("Ｑ"));
		assertTrue(UtilityCharacter.toZenkaku("R").equals("Ｒ"));
		assertTrue(UtilityCharacter.toZenkaku("S").equals("Ｓ"));
		assertTrue(UtilityCharacter.toZenkaku("T").equals("Ｔ"));
		assertTrue(UtilityCharacter.toZenkaku("U").equals("Ｕ"));
		assertTrue(UtilityCharacter.toZenkaku("V").equals("Ｖ"));
		assertTrue(UtilityCharacter.toZenkaku("W").equals("Ｗ"));
		assertTrue(UtilityCharacter.toZenkaku("X").equals("Ｘ"));
		assertTrue(UtilityCharacter.toZenkaku("Y").equals("Ｙ"));
		assertTrue(UtilityCharacter.toZenkaku("Z").equals("Ｚ"));
		assertTrue(UtilityCharacter.toZenkaku("ｱ").equals("ア"));
		assertTrue(UtilityCharacter.toZenkaku("ｲ").equals("イ"));
		assertTrue(UtilityCharacter.toZenkaku("ｳ").equals("ウ"));
		assertTrue(UtilityCharacter.toZenkaku("ｴ").equals("エ"));
		assertTrue(UtilityCharacter.toZenkaku("ｵ").equals("オ"));
		assertTrue(UtilityCharacter.toZenkaku("ｶ").equals("カ"));
		assertTrue(UtilityCharacter.toZenkaku("ｷ").equals("キ"));
		assertTrue(UtilityCharacter.toZenkaku("ｸ").equals("ク"));
		assertTrue(UtilityCharacter.toZenkaku("ｹ").equals("ケ"));
		assertTrue(UtilityCharacter.toZenkaku("ｺ").equals("コ"));
		assertTrue(UtilityCharacter.toZenkaku("ｻ").equals("サ"));
		assertTrue(UtilityCharacter.toZenkaku("ｼ").equals("シ"));
		assertTrue(UtilityCharacter.toZenkaku("ｽ").equals("ス"));
		assertTrue(UtilityCharacter.toZenkaku("ｾ").equals("セ"));
		assertTrue(UtilityCharacter.toZenkaku("ｿ").equals("ソ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾀ").equals("タ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾁ").equals("チ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾂ").equals("ツ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾃ").equals("テ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾄ").equals("ト"));
		assertTrue(UtilityCharacter.toZenkaku("ﾅ").equals("ナ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾆ").equals("ニ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾇ").equals("ヌ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾈ").equals("ネ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾉ").equals("ノ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾊ").equals("ハ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾋ").equals("ヒ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾌ").equals("フ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾍ").equals("ヘ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾎ").equals("ホ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾏ").equals("マ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾐ").equals("ミ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾑ").equals("ム"));
		assertTrue(UtilityCharacter.toZenkaku("ﾒ").equals("メ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾓ").equals("モ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾔ").equals("ヤ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾕ").equals("ユ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾖ").equals("ヨ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾗ").equals("ラ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾘ").equals("リ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾙ").equals("ル"));
		assertTrue(UtilityCharacter.toZenkaku("ﾚ").equals("レ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾛ").equals("ロ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾜ").equals("ワ"));
		assertTrue(UtilityCharacter.toZenkaku("ｦ").equals("ヲ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾝ").equals("ン"));
		assertTrue(UtilityCharacter.toZenkaku("ｧ").equals("ァ"));
		assertTrue(UtilityCharacter.toZenkaku("ｨ").equals("ィ"));
		assertTrue(UtilityCharacter.toZenkaku("ｩ").equals("ゥ"));
		assertTrue(UtilityCharacter.toZenkaku("ｪ").equals("ェ"));
		assertTrue(UtilityCharacter.toZenkaku("ｫ").equals("ォ"));
		assertTrue(UtilityCharacter.toZenkaku("ｯ").equals("ッ"));
		assertTrue(UtilityCharacter.toZenkaku("ｬ").equals("ャ"));
		assertTrue(UtilityCharacter.toZenkaku("ｭ").equals("ュ"));
		assertTrue(UtilityCharacter.toZenkaku("ｮ").equals("ョ"));
		assertTrue(UtilityCharacter.toZenkaku("ｰ").equals("ー"));
		assertTrue(UtilityCharacter.toZenkaku("｡").equals("。"));
		assertTrue(UtilityCharacter.toZenkaku("､").equals("、"));
		assertTrue(UtilityCharacter.toZenkaku("･").equals("・"));
		assertTrue(UtilityCharacter.toZenkaku("｢").equals("「"));
		assertTrue(UtilityCharacter.toZenkaku("｣").equals("」"));
		assertTrue(UtilityCharacter.toZenkaku("ﾞ").equals("゛"));
		assertTrue(UtilityCharacter.toZenkaku("ﾟ").equals("゜"));
		assertTrue(UtilityCharacter.toZenkaku("ｳﾞ").equals("ヴ"));
		assertTrue(UtilityCharacter.toZenkaku("ｶﾞ").equals("ガ"));
		assertTrue(UtilityCharacter.toZenkaku("ｷﾞ").equals("ギ"));
		assertTrue(UtilityCharacter.toZenkaku("ｸﾞ").equals("グ"));
		assertTrue(UtilityCharacter.toZenkaku("ｹﾞ").equals("ゲ"));
		assertTrue(UtilityCharacter.toZenkaku("ｺﾞ").equals("ゴ"));
		assertTrue(UtilityCharacter.toZenkaku("ｻﾞ").equals("ザ"));
		assertTrue(UtilityCharacter.toZenkaku("ｼﾞ").equals("ジ"));
		assertTrue(UtilityCharacter.toZenkaku("ｽﾞ").equals("ズ"));
		assertTrue(UtilityCharacter.toZenkaku("ｾﾞ").equals("ゼ"));
		assertTrue(UtilityCharacter.toZenkaku("ｿﾞ").equals("ゾ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾀﾞ").equals("ダ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾁﾞ").equals("ヂ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾂﾞ").equals("ヅ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾃﾞ").equals("デ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾄﾞ").equals("ド"));
		assertTrue(UtilityCharacter.toZenkaku("ﾊﾞ").equals("バ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾋﾞ").equals("ビ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾌﾞ").equals("ブ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾍﾞ").equals("ベ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾎﾞ").equals("ボ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾊﾟ").equals("パ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾋﾟ").equals("ピ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾌﾟ").equals("プ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾍﾟ").equals("ペ"));
		assertTrue(UtilityCharacter.toZenkaku("ﾎﾟ").equals("ポ"));
		assertTrue(UtilityCharacter.toZenkaku("０").equals("０"));
		assertTrue(UtilityCharacter.toZenkaku("ｶﾟ").equals("カ゜"));
		assertTrue(UtilityCharacter.toZenkaku("ｷwﾞ").equals("キｗ゛"));
		assertTrue(UtilityCharacter.toZenkaku("ｗﾞ").equals("ｗ゛"));
	}

	@Test
	public void isWhitespaceTest() {
		assertTrue(UtilityCharacter.isWhitespace(' '));
		assertTrue(UtilityCharacter.isWhitespace('\t'));
		assertTrue(UtilityCharacter.isWhitespace('\n'));
		assertTrue(UtilityCharacter.isWhitespace('\r'));
		assertFalse(UtilityCharacter.isWhitespace('a'));
	}

	@Test
	public void isAlphaTest() {
		assertFalse(UtilityCharacter.isAlpha('0'));
		assertFalse(UtilityCharacter.isAlpha('1'));
		assertFalse(UtilityCharacter.isAlpha('2'));
		assertFalse(UtilityCharacter.isAlpha('3'));
		assertFalse(UtilityCharacter.isAlpha('4'));
		assertFalse(UtilityCharacter.isAlpha('5'));
		assertFalse(UtilityCharacter.isAlpha('6'));
		assertFalse(UtilityCharacter.isAlpha('7'));
		assertFalse(UtilityCharacter.isAlpha('8'));
		assertFalse(UtilityCharacter.isAlpha('9'));
		assertFalse(UtilityCharacter.isAlpha((char) ('a' - 1)));
		assertTrue(UtilityCharacter.isAlpha('a'));
		assertTrue(UtilityCharacter.isAlpha('b'));
		assertTrue(UtilityCharacter.isAlpha('c'));
		assertTrue(UtilityCharacter.isAlpha('d'));
		assertTrue(UtilityCharacter.isAlpha('e'));
		assertTrue(UtilityCharacter.isAlpha('f'));
		assertTrue(UtilityCharacter.isAlpha('g'));
		assertTrue(UtilityCharacter.isAlpha('h'));
		assertTrue(UtilityCharacter.isAlpha('i'));
		assertTrue(UtilityCharacter.isAlpha('j'));
		assertTrue(UtilityCharacter.isAlpha('k'));
		assertTrue(UtilityCharacter.isAlpha('l'));
		assertTrue(UtilityCharacter.isAlpha('m'));
		assertTrue(UtilityCharacter.isAlpha('n'));
		assertTrue(UtilityCharacter.isAlpha('o'));
		assertTrue(UtilityCharacter.isAlpha('p'));
		assertTrue(UtilityCharacter.isAlpha('q'));
		assertTrue(UtilityCharacter.isAlpha('r'));
		assertTrue(UtilityCharacter.isAlpha('s'));
		assertTrue(UtilityCharacter.isAlpha('t'));
		assertTrue(UtilityCharacter.isAlpha('u'));
		assertTrue(UtilityCharacter.isAlpha('v'));
		assertTrue(UtilityCharacter.isAlpha('w'));
		assertTrue(UtilityCharacter.isAlpha('x'));
		assertTrue(UtilityCharacter.isAlpha('y'));
		assertTrue(UtilityCharacter.isAlpha('z'));
		assertFalse(UtilityCharacter.isAlpha((char) ('z' + 1)));
		assertFalse(UtilityCharacter.isAlpha((char) ('A' - 1)));
		assertTrue(UtilityCharacter.isAlpha('A'));
		assertTrue(UtilityCharacter.isAlpha('B'));
		assertTrue(UtilityCharacter.isAlpha('C'));
		assertTrue(UtilityCharacter.isAlpha('D'));
		assertTrue(UtilityCharacter.isAlpha('E'));
		assertTrue(UtilityCharacter.isAlpha('F'));
		assertTrue(UtilityCharacter.isAlpha('G'));
		assertTrue(UtilityCharacter.isAlpha('H'));
		assertTrue(UtilityCharacter.isAlpha('I'));
		assertTrue(UtilityCharacter.isAlpha('J'));
		assertTrue(UtilityCharacter.isAlpha('K'));
		assertTrue(UtilityCharacter.isAlpha('L'));
		assertTrue(UtilityCharacter.isAlpha('M'));
		assertTrue(UtilityCharacter.isAlpha('N'));
		assertTrue(UtilityCharacter.isAlpha('O'));
		assertTrue(UtilityCharacter.isAlpha('P'));
		assertTrue(UtilityCharacter.isAlpha('Q'));
		assertTrue(UtilityCharacter.isAlpha('R'));
		assertTrue(UtilityCharacter.isAlpha('S'));
		assertTrue(UtilityCharacter.isAlpha('T'));
		assertTrue(UtilityCharacter.isAlpha('U'));
		assertTrue(UtilityCharacter.isAlpha('V'));
		assertTrue(UtilityCharacter.isAlpha('W'));
		assertTrue(UtilityCharacter.isAlpha('X'));
		assertTrue(UtilityCharacter.isAlpha('Y'));
		assertTrue(UtilityCharacter.isAlpha('Z'));
		assertFalse(UtilityCharacter.isAlpha((char) ('Z' + 1)));
		assertTrue(UtilityCharacter.isAlpha('_'));
	}

	@Test
	public void isNumericTest() {
		assertFalse(UtilityCharacter.isNumeric((char) ('0' - 1)));
		assertTrue(UtilityCharacter.isNumeric('0'));
		assertTrue(UtilityCharacter.isNumeric('1'));
		assertTrue(UtilityCharacter.isNumeric('2'));
		assertTrue(UtilityCharacter.isNumeric('3'));
		assertTrue(UtilityCharacter.isNumeric('4'));
		assertTrue(UtilityCharacter.isNumeric('5'));
		assertTrue(UtilityCharacter.isNumeric('6'));
		assertTrue(UtilityCharacter.isNumeric('7'));
		assertTrue(UtilityCharacter.isNumeric('8'));
		assertTrue(UtilityCharacter.isNumeric('9'));
		assertFalse(UtilityCharacter.isNumeric((char) ('9' + 1)));
		assertFalse(UtilityCharacter.isNumeric('a'));
		assertFalse(UtilityCharacter.isNumeric('b'));
		assertFalse(UtilityCharacter.isNumeric('c'));
		assertFalse(UtilityCharacter.isNumeric('d'));
		assertFalse(UtilityCharacter.isNumeric('e'));
		assertFalse(UtilityCharacter.isNumeric('f'));
		assertFalse(UtilityCharacter.isNumeric('g'));
		assertFalse(UtilityCharacter.isNumeric('h'));
		assertFalse(UtilityCharacter.isNumeric('i'));
		assertFalse(UtilityCharacter.isNumeric('j'));
		assertFalse(UtilityCharacter.isNumeric('k'));
		assertFalse(UtilityCharacter.isNumeric('l'));
		assertFalse(UtilityCharacter.isNumeric('m'));
		assertFalse(UtilityCharacter.isNumeric('n'));
		assertFalse(UtilityCharacter.isNumeric('o'));
		assertFalse(UtilityCharacter.isNumeric('p'));
		assertFalse(UtilityCharacter.isNumeric('q'));
		assertFalse(UtilityCharacter.isNumeric('r'));
		assertFalse(UtilityCharacter.isNumeric('s'));
		assertFalse(UtilityCharacter.isNumeric('t'));
		assertFalse(UtilityCharacter.isNumeric('u'));
		assertFalse(UtilityCharacter.isNumeric('v'));
		assertFalse(UtilityCharacter.isNumeric('w'));
		assertFalse(UtilityCharacter.isNumeric('x'));
		assertFalse(UtilityCharacter.isNumeric('y'));
		assertFalse(UtilityCharacter.isNumeric('z'));
		assertFalse(UtilityCharacter.isNumeric('A'));
		assertFalse(UtilityCharacter.isNumeric('B'));
		assertFalse(UtilityCharacter.isNumeric('C'));
		assertFalse(UtilityCharacter.isNumeric('D'));
		assertFalse(UtilityCharacter.isNumeric('E'));
		assertFalse(UtilityCharacter.isNumeric('F'));
		assertFalse(UtilityCharacter.isNumeric('G'));
		assertFalse(UtilityCharacter.isNumeric('H'));
		assertFalse(UtilityCharacter.isNumeric('I'));
		assertFalse(UtilityCharacter.isNumeric('J'));
		assertFalse(UtilityCharacter.isNumeric('K'));
		assertFalse(UtilityCharacter.isNumeric('L'));
		assertFalse(UtilityCharacter.isNumeric('M'));
		assertFalse(UtilityCharacter.isNumeric('N'));
		assertFalse(UtilityCharacter.isNumeric('O'));
		assertFalse(UtilityCharacter.isNumeric('P'));
		assertFalse(UtilityCharacter.isNumeric('Q'));
		assertFalse(UtilityCharacter.isNumeric('R'));
		assertFalse(UtilityCharacter.isNumeric('S'));
		assertFalse(UtilityCharacter.isNumeric('T'));
		assertFalse(UtilityCharacter.isNumeric('U'));
		assertFalse(UtilityCharacter.isNumeric('V'));
		assertFalse(UtilityCharacter.isNumeric('W'));
		assertFalse(UtilityCharacter.isNumeric('X'));
		assertFalse(UtilityCharacter.isNumeric('Y'));
		assertFalse(UtilityCharacter.isNumeric('Z'));
		assertFalse(UtilityCharacter.isNumeric('_'));
	}

	@Test
	public void isOperatorTest() {
		assertTrue(UtilityCharacter.isOperator('!'));
		assertTrue(UtilityCharacter.isOperator('^'));
		assertTrue(UtilityCharacter.isOperator('~'));
		assertTrue(UtilityCharacter.isOperator('='));
		assertTrue(UtilityCharacter.isOperator('+'));
		assertTrue(UtilityCharacter.isOperator('-'));
		assertTrue(UtilityCharacter.isOperator('*'));
		assertTrue(UtilityCharacter.isOperator('/'));
		assertTrue(UtilityCharacter.isOperator('%'));
		assertTrue(UtilityCharacter.isOperator('&'));
		assertTrue(UtilityCharacter.isOperator('|'));
		assertTrue(UtilityCharacter.isOperator('<'));
		assertTrue(UtilityCharacter.isOperator('>'));
		assertFalse(UtilityCharacter.isOperator('a'));
	}
}
