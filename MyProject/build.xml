<?xml version="1.0"?><project xmlns:jacoco="antlib:org.jacoco.ant" name="フレームワークBUILD" default="build"><tstamp><format property="NOW" pattern="yyyyMMddHHmmss"/></tstamp><property name="jar.dir" location="./jar"/><property name="src.dir" location="./src"/><property name="lib.dir" location="./lib"/><property name="manager.dir" location="./manager"/><property name="installer.dir" location="./installer"/><property name="target.dir" location="./target"/><property name="test.dir" location="./test"/><property name="installer.jar.dir" location="${installer.dir}/frameWork/architect/jar"/><property name="installer.jar.info" location="${installer.jar.dir}/info.xml"/><property name="manager.architect.dir" location="${manager.dir}/frameWork/architect"/><property name="manager.info" location="${manager.dir}/frameWork/architect/info.xml"/><property name="manager.test" location="${manager.dir}/frameWork/architect/result.xml"/><property name="manager.result" location="${manager.dir}/frameWork/architect/TEST-frameWork.AllTests.xml"/><property name="target.compileFramework.dir" location="${target.dir}/compileFrameworkClass"/><property name="target.test.dir" location="${target.dir}/testClass"/><property name="target.manager.dir" location="${target.dir}/compileManagerClass"/><property name="target.installer.dir" location="${target.dir}/compileInstallerClass"/><property name="coverage.exec.file" location="${target.dir}/coverage.exec"/><taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml"><classpath path="${lib.dir}/jacocoant.jar"/></taskdef><target name="clean"><delete dir="${target.dir}"/><delete dir="${installer.jar.dir}"/><delete file="${manager.info}"/><delete file="${manager.test}"/><delete file="${manager.result}"/></target><target name="compileFramework" depends="clean"><mkdir dir="${target.compileFramework.dir}"/><path id="compileFrameworkPath"><fileset dir="${lib.dir}" includes="*.jar"/></path><javac srcdir="${src.dir}" destdir="${target.compileFramework.dir}" debug="true" includeantruntime="false" fork="true" encoding="utf-8" ><classpath refid="compileFrameworkPath"/></javac><jar jarfile="${installer.jar.dir}/framework.jar"><fileset dir="${target.compileFramework.dir}" includes="**/*.png"/><fileset dir="${target.compileFramework.dir}" includes="**/*.class"/><fileset dir="${target.compileFramework.dir}" includes="**/*.java"/><fileset dir="${target.compileFramework.dir}" includes="**/*.ttf"/><fileset dir="${target.compileFramework.dir}" includes="**/*.xml"/><fileset dir="${target.compileFramework.dir}" includes="**/*.jar"/><fileset dir="${target.compileFramework.dir}" includes="**/*.zip"/><fileset dir="${src.dir}" includes="**/*.png"/><fileset dir="${src.dir}" includes="**/*.class"/><fileset dir="${src.dir}" includes="**/*.java"/><fileset dir="${src.dir}" includes="**/*.ttf"/><fileset dir="${src.dir}" includes="**/*.xml"/><fileset dir="${src.dir}" includes="**/*.jar"/><fileset dir="${src.dir}" includes="**/*.zip"/></jar></target><target name="test" depends="compileFramework"><mkdir dir="${target.test.dir}"/><path id="testPath"><fileset dir="${lib.dir}" includes="*.jar"/><fileset dir="${installer.jar.dir}" includes="framework.jar"/></path><javac srcdir="${test.dir}" destdir="${target.test.dir}" debug="true" includeantruntime="false" fork="true" encoding="utf-8" ><classpath refid="testPath"/></javac><jacoco:coverage destfile="${coverage.exec.file}"><junit fork="true" forkmode="once"><formatter type="xml" /><classpath><path path="${target.test.dir}" /><fileset dir="${lib.dir}" includes="*.jar"/><fileset dir="${installer.jar.dir}" includes="framework.jar"/></classpath><batchtest todir="${manager.architect.dir}"><fileset dir="${test.dir}"><include name="**/AllTests.java" /></fileset></batchtest></junit></jacoco:coverage></target><target name="coverage" depends="test"><jacoco:report><executiondata><file file="${coverage.exec.file}"/></executiondata><structure name="カバレッジ"><classfiles><fileset dir="${target.compileFramework.dir}"/></classfiles><sourcefiles encoding="UTF-8"><fileset dir="${src.dir}"/></sourcefiles></structure><html destdir="./html"/><xml destfile="${manager.test}"/></jacoco:report></target><target name="compileManager" depends="coverage"><mkdir dir="${target.manager.dir}"/><path id="compileManagerPath"><fileset dir="${lib.dir}" includes="*.jar"/><fileset dir="${installer.jar.dir}" includes="framework.jar"/></path><javac srcdir="${manager.dir}" destdir="${target.manager.dir}" debug="true" includeantruntime="false" fork="true" encoding="utf-8" ><classpath refid="compileManagerPath"/></javac><echo file="${manager.info}" message="&lt;?xml version=&quot;1.0&quot; encoding=&quot;Shift_JIS&quot; standalone=&quot;no&quot;?&gt;&lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&gt;&lt;properties&gt;&lt;entry key=&quot;Ver&quot;&gt;${NOW}&lt;/entry&gt;&lt;/properties&gt;" encoding="Shift_JIS"/><jar jarfile="${installer.jar.dir}/manager.jar"><manifest><attribute name="Main-Class" value="frameWork.manager.FrameworkManager"/></manifest><fileset dir="${target.manager.dir}" includes="**/*.png"/><fileset dir="${target.manager.dir}" includes="**/*.class"/><fileset dir="${target.manager.dir}" includes="**/*.java"/><fileset dir="${target.manager.dir}" includes="**/*.ttf"/><fileset dir="${target.manager.dir}" includes="**/*.xml"/><fileset dir="${target.manager.dir}" includes="**/*.jar"/><fileset dir="${target.manager.dir}" includes="**/*.zip"/><fileset dir="${manager.dir}" includes="**/*.png"/><fileset dir="${manager.dir}" includes="**/*.class"/><fileset dir="${manager.dir}" includes="**/*.java"/><fileset dir="${manager.dir}" includes="**/*.ttf"/><fileset dir="${manager.dir}" includes="**/*.xml"/><fileset dir="${manager.dir}" includes="**/*.jar"/><fileset dir="${manager.dir}" includes="**/*.zip"/></jar></target>	<target name="compileInstaller" depends="compileManager"><zip destfile="${installer.jar.dir}/jdk.zip" basedir="./jdk"/><copy todir="${installer.jar.dir}"><fileset dir="${lib.dir}" includes="*.jar"/></copy><fileset id="test" dir="${lib.dir}" includes="/**/*"/><pathconvert pathsep="&#xA;" property="filelist" refid="test" /><echo file="${installer.jar.info}" message="&lt;?xml version=&quot;1.0&quot; encoding=&quot;Shift_JIS&quot; standalone=&quot;no&quot;?&gt;&lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&gt;&lt;properties&gt;&lt;entry key=&quot;Path&quot;&gt;${filelist}&lt;/entry&gt;&lt;/properties&gt;" encoding="Shift_JIS"/><mkdir dir="${target.installer.dir}"/><path id="compileInstallerPath"><fileset dir="${installer.jar.dir}" includes="*.jar"/></path><javac srcdir="${installer.dir}" destdir="${target.installer.dir}" debug="true" includeantruntime="false" fork="true" encoding="utf-8" ><classpath refid="compileInstallerPath"/></javac><jar jarfile="${jar.dir}/installer.jar"><manifest><attribute name="Main-Class" value="frameWork.architect.installer.Installer"/></manifest><fileset dir="${target.installer.dir}" includes="**/*.png"/><fileset dir="${target.installer.dir}" includes="**/*.class"/><fileset dir="${target.installer.dir}" includes="**/*.java"/><fileset dir="${target.installer.dir}" includes="**/*.ttf"/><fileset dir="${target.installer.dir}" includes="**/*.xml"/><fileset dir="${target.installer.dir}" includes="**/*.jar"/><fileset dir="${target.installer.dir}" includes="**/*.zip"/><fileset dir="${installer.dir}" includes="**/*.png"/><fileset dir="${installer.dir}" includes="**/*.class"/><fileset dir="${installer.dir}" includes="**/*.java"/><fileset dir="${installer.dir}" includes="**/*.ttf"/><fileset dir="${installer.dir}" includes="**/*.xml"/><fileset dir="${installer.dir}" includes="**/*.jar"/><fileset dir="${installer.dir}" includes="**/*.zip"/><fileset dir="${manager.dir}" includes="**/*.png"/><fileset dir="${manager.dir}" includes="**/*.class"/><fileset dir="${manager.dir}" includes="**/*.java"/><fileset dir="${manager.dir}" includes="**/*.ttf"/><fileset dir="${manager.dir}" includes="**/*.xml"/><fileset dir="${manager.dir}" includes="**/*.jar"/><fileset dir="${manager.dir}" includes="**/*.zip"/></jar><mkdir dir="${jar.dir}/${NOW}"/><copy todir="${jar.dir}/${NOW}" ><fileset dir="${jar.dir}" includes="installer.jar"/></copy></target><target name="build" depends="clean,compileFramework,test,coverage,compileManager,compileInstaller"><antcall target="clean"/></target></project>